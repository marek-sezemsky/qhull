--- qhull-2012.1/CMakeLists.txt.orig	2012-02-22 04:38:47.000000000 +0100
+++ qhull-2012.1/CMakeLists.txt	2012-02-26 09:01:36.040986288 +0100
@@ -226,13 +226,15 @@
 include_directories(${CMAKE_SOURCE_DIR}/src ${CMAKE_SOURCE_DIR}/src/libqhull)
 
 if(CMAKE_BUILD_TYPE MATCHES "[dD]ebug")
-    set(qhull_CPP qhullcpp_d)
+    set(qhull_CPP_SHARED qhullcpp_d)
+    set(qhull_CPP_STATIC qhullcppstatic_d)
     set(qhull_SHARED qhull_d)
     set(qhull_SHAREDP qhull_pd)
     set(qhull_STATIC qhullstatic_d)
     set(qhull_STATICP qhullstatic_pd)
 else()
-    set(qhull_CPP qhullcpp)
+    set(qhull_CPP_SHARED qhullcpp)
+    set(qhull_CPP_STATIC qhullcppstatic)
     set(qhull_SHARED libqhull)  # Avoid name conflict with qhull executable
     set(qhull_SHAREDP qhull_p)
     set(qhull_STATIC qhullstatic)
@@ -241,7 +243,7 @@
 
 set(
     qhull_TARGETS_INSTALL
-        ${qhull_CPP} ${qhull_STATIC} ${qhull_STATICP} ${qhull_SHARED} ${qhull_SHAREDP}
+    ${qhull_CPP_SHARED} ${qhull_CPP_STATIC} ${qhull_STATIC} ${qhull_STATICP} ${qhull_SHARED} ${qhull_SHAREDP}
         qhull rbox qconvex qdelaunay qvoronoi qhalf
 )
 set(
@@ -272,15 +274,6 @@
 
 if(UNIX)
     target_link_libraries(${qhull_SHARED} m)
-    if(APPLE)
-        set_target_properties(${qhull_SHARED} PROPERTIES 
-            INSTALL_NAME_DIR "${LIB_INSTALL_DIR}")
-    else()
-        set_target_properties(${qhull_SHARED} PROPERTIES 
-            INSTALL_RPATH "${LIB_INSTALL_DIR}"
-            INSTALL_RPATH_USE_LINK_PATH TRUE
-            BUILD_WITH_INSTALL_RPATH FALSE)
-    endif()
 endif(UNIX)
 
 # ---------------------------------------
@@ -296,17 +289,14 @@
 
 if(UNIX)
     target_link_libraries(${qhull_SHAREDP} m)
-    if(APPLE)
-        set_target_properties(${qhull_SHAREDP} PROPERTIES 
-            INSTALL_NAME_DIR "${LIB_INSTALL_DIR}")
-    else()
-        set_target_properties(${qhull_SHAREDP} PROPERTIES 
-            INSTALL_RPATH "${LIB_INSTALL_DIR}"
-            INSTALL_RPATH_USE_LINK_PATH TRUE
-            BUILD_WITH_INSTALL_RPATH FALSE)
-    endif()
 endif(UNIX)
 
+add_library(${qhull_CPP_SHARED} SHARED ${libqhullcpp_SOURCES})
+set_target_properties(${qhull_CPP_SHARED} PROPERTIES
+    COMPILE_DEFINITIONS "qh_QHpointer"
+    SOVERSION ${qhull_SOVERSION})
+target_link_libraries(${qhull_CPP_SHARED} ${qhull_SHARED})
+
 # ---------------------------------------
 # Define static libraries qhullstatic and qhullstatic_p (qh_QHpointer)
 # ---------------------------------------
@@ -329,8 +319,8 @@
 # Define C++ static library qhullcpp (qh_QHpointer)
 # ---------------------------------------
 
-add_library(${qhull_CPP} STATIC ${libqhullcpp_SOURCES})
-set_target_properties(${qhull_CPP} PROPERTIES
+add_library(${qhull_CPP_STATIC} STATIC ${libqhullcpp_SOURCES})
+set_target_properties(${qhull_CPP_STATIC} PROPERTIES
     COMPILE_DEFINITIONS "qh_QHpointer"
     VERSION ${qhull_VERSION})
 
@@ -354,22 +344,22 @@
 endif()
 
 add_executable(qhull ${qhull_SOURCES})
-target_link_libraries(qhull ${qhull_STATIC})
+target_link_libraries(qhull ${qhull_STATIC} m)
 
 add_executable(rbox ${rbox_SOURCES})
-target_link_libraries(rbox ${qhull_STATIC})
+target_link_libraries(rbox ${qhull_STATIC} m)
 
 add_executable(qconvex ${qconvex_SOURCES})
-target_link_libraries(qconvex ${qhull_STATIC})
+target_link_libraries(qconvex ${qhull_STATIC} m)
 
 add_executable(qdelaunay ${qdelaunay_SOURCES})
-target_link_libraries(qdelaunay ${qhull_STATIC})
+target_link_libraries(qdelaunay ${qhull_STATIC} m)
 
 add_executable(qvoronoi ${qvoronoi_SOURCES})
-target_link_libraries(qvoronoi ${qhull_STATIC})
+target_link_libraries(qvoronoi ${qhull_STATIC} m)
 
 add_executable(qhalf ${qhalf_SOURCES})
-target_link_libraries(qhalf ${qhull_STATIC})
+target_link_libraries(qhalf ${qhull_STATIC} m)
 
 # ---------------------------------------
 # Define testqset linked to qset.o and mem.o
@@ -385,7 +375,7 @@
 
 add_executable(user_eg ${user_eg_SOURCES})
 # user_eg may be linked to qhull_STATIC if user_eg_DEFINES is removed
-target_link_libraries(user_eg ${qhull_SHAREDP})
+target_link_libraries(user_eg ${qhull_SHAREDP} m)
 set_target_properties(user_eg PROPERTIES
     COMPILE_DEFINITIONS "${user_eg_DEFINES}")
 
@@ -394,7 +384,7 @@
 # ---------------------------------------
 
 add_executable(user_eg2 ${user_eg2_SOURCES})
-target_link_libraries(user_eg2 ${qhull_SHARED})
+target_link_libraries(user_eg2 ${qhull_SHARED} m)
 set_target_properties(user_eg2 PROPERTIES
     COMPILE_DEFINITIONS "${user_eg2_DEFINES}")
 
@@ -410,7 +400,7 @@
 
 add_executable(user_eg3 ${user_eg3_SOURCES})
 # qhull_STATICP must be last, otherwise qh_fprintf,etc. are not loaded from qhull_CPP
-target_link_libraries(user_eg3 ${qhull_CPP} ${qhull_STATICP})
+target_link_libraries(user_eg3 ${qhull_CPP_SHARED} ${qhull_SHARED})
 set_target_properties(user_eg3 PROPERTIES
     COMPILE_DEFINITIONS "qh_QHpointer")
 
